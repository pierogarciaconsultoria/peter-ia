
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// TODO: Atualizar com as credenciais da nova inst√¢ncia Peter.IA
const SUPABASE_URL = "https://sua-nova-instancia.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "sua-nova-chave-aqui";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: false,
      storage: localStorage,
      flowType: 'pkce'
    }
  }
);

// Helper function to check if admin account exists
export const confirmAdminEmail = async (email: string) => {
  try {
    console.log("Checking admin account:", email);
    
    // Try to get user by email
    const { data, error } = await supabase.auth.admin.listUsers();
    
    if (error) {
      console.error("Error checking admin account:", error);
      return { success: false, error };
    }
    
    // Find the admin user by email in the users array
    // Explicitly type the users array to avoid 'never' type issues
    const adminUser = data.users?.find((user: any) => user.email === email);
    
    if (!adminUser) {
      return { success: false, error: new Error("Admin account not found") };
    }
    
    return { success: true, data: adminUser };
  } catch (error) {
    console.error("Unexpected error checking admin account:", error);
    return { success: false, error };
  }
};
